---
title: "EJA Population Genomics Low coverage"
author: "Arthur OulÃ¨s"
format: html
editor: source
---
# Load packages

```{r}
#| label: LoadPackages
#| echo: false

c("here", "tidyverse",
  "pcadapt", "vcfR", "adegenet", "ape", "LEA", "triangulaR",
  "viridisLite") |>
  lapply(library, character.only = TRUE) |> invisible()
```

# Load data analysis functions
```{r}
#| label: LoadTidy

source(here("functions", "lcwgs_tidy_functions.R"))
```

# Helper objects

```{r}
#| label: GenomeMap
#| echo: false

EJA_lcwgs_vcf <- read.vcfR(here("data", "SNPS", "8-Embiotoca_filtered.vcf.gz"))

EJA_lcwgs_vcf |>
  getFIX() |>
  as_tibble() |>
  select(CHROM, POS) |>
  mutate(POS = as.numeric(POS)) |>
  saveRDS(file = here("data", "SNP_positions.rds"))

EJA_lcwgs_vcf |>
  extract_gt_tidy() |>
  _$Indiv |>
  write_rds(file = here("data", "Individual_list.rds"))

rm(EJA_lcwgs_vcf)
```

# pcadapt analysis

## All populations

### Convert vcf to bed file using plink2
```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --vcf 8-Embiotoca_filtered.vcf.gz --make-bed --out 8-Embiotoca_filtered
```

### Preanalysis to determine optimal K value
```{r}
#| label: PreAnalysis

EJA_lcwgs <- read.pcadapt(
  here("data", "SNPs", "8-Embiotoca_filtered.bed"),
  type = "bed"
)

pcadapt(input = EJA_lcwgs, K = 20) |>
  plot(option = "screeplot")
```

K = 4 seems correct

### Analysis using K = 4
```{r}
#| label: pcadapt

popmap_lcwgs <- c(
  rep("bodega_bay",            5), # BB
  rep("big_creek",            13), # BIGC -> BCR
  rep("catalina_island",      11), # CAT
  rep("elkhorn",               6), # ELK
  rep("guadalupe_island",     10), # GUA
  rep("pacific_grove",        13), # HOP -> Pacific Grove PGR 
  rep("isla_san_jeronimo",    11), # ISJ
  rep("laguna_beach",         13), # LB
  rep("point_dume",            5), # PD
  rep("santa_barbara",        13), # SB
  rep("san_clemente_island",  10), # SCL
  rep("la_jolla_san_diego",   13), # SD
  rep("tomales_bay",           1), # TB
  rep("redondo_beach",        10), # RB
  rep("santa_cruz_harbour",   10) # SCH
)

pcadapt_lcwgs <- EJA_lcwgs |> pcadapt(K = 4)
```

```{r}
#| eval: false

write_rds(pcadapt_lcwgs, file = here("output", "pcadapt_lcwgs.rds"))
```

### Exploratory plots
```{r}
#| label: ExploPlots

pcadapt_lcwgs |> plot(option = "scores", pop = popmap_lcwgs, i = 1, j = 2)
pcadapt_lcwgs |> plot(option = "scores", pop = popmap_lcwgs, i = 2, j = 3)
pcadapt_lcwgs |> plot(option = "scores", pop = popmap_lcwgs, i = 3, j = 4)

pcadapt_lcwgs |> plot(option = "qqplot")

pcadapt_lcwgs |> plot(option = "manhattan")

pcadapt_lcwgs$pvalues |> hist(
  xlab   = "p-values",
  main   = NULL,
  breaks = 50,
  col    = "orange"
)
```

## Coastal populations

### Generating whitelist

```{r}
#| label: CoastSaveWhitelist
#| eval: false

read_csv2(here("data", "individuals_coordinates.csv")) |>
  pull(Indiv) |> 
  {\(x) {
    x[!(grepl(pattern = "SCL", x = x) |
        grepl(pattern = "GUA", x = x) |
        grepl(pattern = "CAT", x = x) |
        grepl(pattern = "ISJ", x = x))]
    }}() |> 
  write_lines(here("plink2", "whitelist_coastal.txt"))
```

### Generating bed file
```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered --keep whitelist_coastal.txt --make-bed --out 8-Embiotoca_filtered_coastal
```

### Preanalysis to determine optimal K value
```{r}
#| label: CoastPreAnalysis
EJA_lcwgs_coast <- read.pcadapt(
  here("data", "SNPs", "8-Embiotoca_filtered_coastal.bed"),
  type = "bed"
)

pcadapt(input = EJA_lcwgs_coast, K = 20) |> plot(option = "screeplot")
```

K = 2 seems correct

### Analysis using K = 2
```{r}
#| label: Coastpcadapt

popmap_lcwgs_coast <- c(
  rep("bodega_bay",            5), # BB
  rep("big_creek",            13), # BIGC -> BCR
  rep("elkhorn",               6), # ELK
  rep("pacific_grove",        13), # HOP -> Pacific Grove PGR
  rep("laguna_beach",         13), # LB
  rep("point_dume",            5), # PD
  rep("santa_barbara",        13), # SB
  rep("la_jolla_san_diego",   13), # SD
  rep("tomales_bay",           1), # TB
  rep("redondo_beach",        10), # RB
  rep("santa_cruz_harbour",   10)  # SCH
)

pcadapt_lcwgs_coast <- pcadapt(EJA_lcwgs_coast, K = 2)
```

```{r}
#| eval: false

write_rds(pcadapt_lcwgs_coast, file = here("output", "pcadapt_lcwgs_coast.rds"))
```

### Associated exploratory plots
```{r}
#| label: CoastExploPlots

coast_PCA_1_2 <- pcadapt_lcwgs_coast |>
  plot(option = "scores", pop = popmap_lcwgs_coast, i = 1, j = 2) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_PCA_1_2.pdf"),
  plot   = coast_PCA_1_2,
  width  = 10,
  height = 8
)

plot(pcadapt_lcwgs_coast, option = "qqplot") + theme_minimal()

coast_manhattan <- pcadapt_lcwgs_coast |>
  plot(option = "manhattan") +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_manhattan.png"),
  plot   = coast_manhattan,
  width  = 16,
  height = 4
)

pcadapt_lcwgs_coast$pvalues |> hist(
  xlab   = "p-values",
  main   = NULL,
  breaks = 50,
  col    = "orange"
)
```

```{r}
#| label: CoastMemclean

rm(EJA_lcwgs_coast, coast_PCA_1_2, coast_manhattan)
```

## North Coastal populations
### Generating bed file
```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered --keep whitelist_north.txt --make-bed --out 8-Embiotoca_filtered_north
```

### Preanalysis to determine optimal K value
```{r}
#| label: NorthPreAnalysis
EJA_lcwgs_north <- read.pcadapt(
  here("plink2", "8-Embiotoca_filtered_north.bed"),
  type = "bed"
)

pcadapt(input = EJA_lcwgs_north, K = 20) |> plot(option = "screeplot")
```

K = 3 seems correct

### Analysis using K = 3
```{r}
#| label: Northpcadapt

popmap_lcwgs_north <- c(
  rep("bodega_bay",            5), # BB
  rep("big_creek",            13), # BIGC -> BCR
  rep("elkhorn",               6), # ELK
  rep("pacific_grove",        13), # HOP -> Pacific Grove PGR
  rep("santa_barbara",        13), # SB
  rep("tomales_bay",           1), # TB
  rep("santa_cruz_harbour",   10)  # SCH
)

pcadapt_lcwgs_north <- pcadapt(EJA_lcwgs_north, K = 3)
```

```{r}
#| eval: false

write_rds(pcadapt_lcwgs_north, file = here("output", "pcadapt_lcwgs_north.rds"))
```

### Associated exploratory plots
```{r}
#| label: NorthExploPlots

north_PCA_1_2 <- pcadapt_lcwgs_north |>
  plot(option = "scores", pop = popmap_lcwgs_north, i = 1, j = 2) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "north_PCA_1_2.pdf"),
  plot   = north_PCA_1_2,
  width  = 10,
  height = 8
)

plot(pcadapt_lcwgs_north, option = "qqplot") + theme_minimal()

north_manhattan <- pcadapt_lcwgs_north |>
  plot(option = "manhattan") +
  theme_minimal()

save_open_plot(
  here("output", "plots", "north_manhattan.png"),
  plot   = north_manhattan,
  width  = 16,
  height = 4
)

pcadapt_lcwgs_north$pvalues |> hist(
  xlab   = "p-values",
  main   = NULL,
  breaks = 50,
  col    = "orange"
)
```

```{r}
#| label: NorthMemclean

rm(EJA_lcwgs_north, north_PCA_1_2, north_manhattan)
```

## South Coastal populations

### Generating bed file
```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered --keep whitelist_south.txt --make-bed --out 8-Embiotoca_filtered_south
```

### Preanalysis to determine optimal K value
```{r}
#| label: SouthPreAnalysis
EJA_lcwgs_south <- read.pcadapt(
  here("plink2", "8-Embiotoca_filtered_south.bed"),
  type = "bed"
)

pcadapt(input = EJA_lcwgs_south, K = 20) |> plot(option = "screeplot")
```

K = 2 seems correct

### Analysis using K = 2
```{r}
#| label: Southpcadapt

popmap_lcwgs_south <- c(
  rep("laguna_beach",         13), # LB
  rep("point_dume",            5), # PD
  rep("santa_barbara",        13), # SB
  rep("la_jolla_san_diego",   13), # SD
  rep("redondo_beach",        10) # RB
)

pcadapt_lcwgs_south <- pcadapt(EJA_lcwgs_south, K = 2)
```

```{r}
#| eval: false

write_rds(pcadapt_lcwgs_south, file = here("output", "pcadapt_lcwgs_south.rds"))
```

### Associated exploratory plots
```{r}
#| label: SouthExploPlots

south_PCA_1_2 <- pcadapt_lcwgs_south |>
  plot(option = "scores", pop = popmap_lcwgs_south, i = 1, j = 2) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "south_PCA_1_2.pdf"),
  plot   = south_PCA_1_2,
  width  = 10,
  height = 8
)

plot(pcadapt_lcwgs_south, option = "qqplot") + theme_minimal()

south_manhattan <- pcadapt_lcwgs_south |>
  plot(option = "manhattan") +
  theme_minimal()

save_open_plot(
  here("output", "plots", "south_manhattan.png"),
  plot   = south_manhattan,
  width  = 16,
  height = 4
)

pcadapt_lcwgs_south$pvalues |> hist(
  xlab   = "p-values",
  main   = NULL,
  breaks = 50,
  col    = "orange"
)
```

```{r}
#| label: CoastMemclean

rm(EJA_lcwgs_south, south_PCA_1_2, south_manhattan)
```

## Coast + ISJ

### Generating whitelist

```{r}
#| label: CoastISJSaveWhitelist
#| eval: false

read_csv2(here("data", "individuals_coordinates.csv")) |>
  pull(Indiv) |> 
  {\(x) {
    x[!(grepl(pattern = "SCL", x = x) |
        grepl(pattern = "GUA", x = x) |
        grepl(pattern = "CAT", x = x))]
    }}() |> 
  write_lines(here("plink2", "whitelist_coastal_isj.txt"))
```

### Generating bed file
```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered --keep whitelist_coastal_isj.txt --make-bed --out 8-Embiotoca_filtered_coastal_isj
```

### Preanalysis to determine optimal K value
```{r}
#| label: CoastISJPreAnalysis
EJA_lcwgs_coast_isj <- read.pcadapt(
  here("plink2", "8-Embiotoca_filtered_coastal_isj.bed"),
  type = "bed"
)

pcadapt(input = EJA_lcwgs_coast_isj, K = 20) |> plot(option = "screeplot")
```

K = 3 seems correct

### Analysis using K = 3
```{r}
#| label: CoastISJpcadapt

popmap_EJA_lcwgs_coast_isj <- c(
  rep("bodega_bay",            5), # BB
  rep("big_creek",            13), # BIGC -> BCR
  rep("elkhorn",               6), # ELK
  rep("pacific_grove",        13), # HOP -> Pacific Grove PGR
  rep("isla_san_jeronimo",    11), # ISJ
  rep("laguna_beach",         13), # LB
  rep("point_dume",            5), # PD
  rep("santa_barbara",        13), # SB
  rep("la_jolla_san_diego",   13), # SD
  rep("tomales_bay",           1), # TB
  rep("redondo_beach",        10), # RB
  rep("santa_cruz_harbour",   10)  # SCH
)

pcadapt_EJA_lcwgs_coast_isj <- EJA_lcwgs_coast_isj |> pcadapt(K = 3)
```

```{r}
#| eval: false

pcadapt_lcwgs_coast_isj |> 
  write_rds(file = here("output", "pcadapt_lcwgs_coast_isj.rds"))
```

### Associated exploratory plots
```{r}
#| label: CoastISJExploPlots

coast_isj_PCA_1_2 <- pcadapt_lcwgs_coast_isj |>
  plot(option = "scores", pop = popmap_lcwgs_coast_isj, i = 1, j = 2) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_isj_PCA_1_2.pdf"),
  plot   = coast_isj_PCA_1_2,
  width  = 10,
  height = 8
)

coast_isj_PCA_2_3 <- pcadapt_lcwgs_coast_isj |>
  plot(option = "scores", pop = popmap_lcwgs_coast_isj, i = 2, j = 3) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_isj_PCA_2_3.pdf"),
  plot   = coast_isj_PCA_2_3,
  width  = 10,
  height = 8
)

pcadapt_lcwgs_coast_isj |> plot(option = "qqplot") + theme_minimal()

coast_isj_manhattan <- pcadapt_lcwgs_coast_isj |>
  plot(option = "manhattan") +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_isj_manhattan.png"),
  plot   = coast_isj_manhattan,
  width  = 16,
  height = 4
)

pcadapt_lcwgs_coast_isj$pvalues |> hist(
  xlab   = "p-values",
  main   = NULL,
  breaks = 50,
  col    = "orange"
)
```

```{r}
#| label: CoastMemclean

rm(EJA_lcwgs_coast_isj, coast_isj_PCA_1_2, coast_isj_PCA_2_3, coast_isj_manhattan)
```

## Coast + SCL

### Generating whitelist

```{r}
#| label: CoastSCLSaveWhitelist
#| eval: false

read_csv2(here("data", "individuals_coordinates.csv")) |>
  pull(Indiv) |> 
  {\(x) {
    x[!(grepl(pattern = "ISJ", x = x) |
        grepl(pattern = "GUA", x = x) |
        grepl(pattern = "CAT", x = x))]
    }}() |> 
  write_lines(here("plink2", "whitelist_coastal_scl.txt"))
```

### Generating bed file
```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered --keep whitelist_coastal_scl.txt --make-bed --out 8-Embiotoca_filtered_coastal_scl
```

### Preanalysis to determine optimal K value
```{r}
#| label: CoastSCLPreAnalysis
lcwgs_coast_scl <- read.pcadapt(
  here("plink2", "8-Embiotoca_filtered_coastal_scl.bed"),
  type = "bed"
)

pcadapt(input = lcwgs_coast_scl, K = 20) |> plot(option = "screeplot")
```

K = 3 seems correct

### Analysis using K = 3
```{r}
#| label: CoastSCLpcadapt

popmap_lcwgs_coast_scl <- c(
  rep("bodega_bay",            5), # BB
  rep("big_creek",            13), # BIGC -> BCR
  rep("elkhorn",               6), # ELK
  rep("pacific_grove",        13), # HOP -> Pacific Grove PGR
  rep("laguna_beach",         13), # LB
  rep("point_dume",            5), # PD
  rep("santa_barbara",        13), # SB
  rep("san_clemente_island",  10), # SCL
  rep("la_jolla_san_diego",   13), # SD
  rep("tomales_bay",           1), # TB
  rep("redondo_beach",        10), # RB
  rep("santa_cruz_harbour",   10)  # SCH
)

pcadapt_lcwgs_coast_scl <- lcwgs_coast_scl |> pcadapt(K = 3)
```

```{r}
#| eval: false

pcadapt_lcwgs_coast_scl |> 
  write_rds(file = here("output", "pcadapt_lcwgs_coast_scl.rds"))
```

### Associated exploratory plots
```{r}
#| label: CoastSCLExploPlots

coast_scl_PCA_1_2 <- pcadapt_lcwgs_coast_scl |>
  plot(option = "scores", pop = popmap_lcwgs_coast_scl, i = 1, j = 2) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_scl_PCA_1_2.pdf"),
  plot   = coast_scl_PCA_1_2,
  width  = 10,
  height = 8
)

coast_scl_PCA_2_3 <- pcadapt_lcwgs_coast_scl |>
  plot(option = "scores", pop = popmap_lcwgs_coast_scl, i = 2, j = 3) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_scl_PCA_2_3.pdf"),
  plot   = coast_scl_PCA_2_3,
  width  = 10,
  height = 8
)

pcadapt_lcwgs_coast_scl |> plot(option = "qqplot") + theme_minimal()

coast_scl_manhattan <- pcadapt_lcwgs_coast_scl |>
  plot(option = "manhattan") +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_scl_manhattan.png"),
  plot   = coast_scl_manhattan,
  width  = 16,
  height = 4
)

pcadapt_lcwgs_coast_scl$pvalues |> hist(
  xlab   = "p-values",
  main   = NULL,
  breaks = 50,
  col    = "orange"
)
```

```{r}
#| label: CoastSCLMemclean

rm(lcwgs_coast_scl, coast_scl_PCA_1_2, coast_scl_PCA_2_3, coast_scl_manhattan)
```
## Coast + GUA

### Generating whitelist

```{r}
#| label: CoastGUASaveWhitelist
#| eval: false

read_csv2(here("data", "individuals_coordinates.csv")) |>
  pull(Indiv) |> 
  {\(x) {
    x[!(grepl(pattern = "ISJ", x = x) |
        grepl(pattern = "SCL", x = x) |
        grepl(pattern = "CAT", x = x))]
    }}() |> 
  write_lines(here("plink2", "whitelist_coastal_gua.txt"))
```

### Generating bed file
```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered --keep whitelist_coastal_gua.txt --make-bed --out 8-Embiotoca_filtered_coastal_gua
```

### Preanalysis to determine optimal K value
```{r}
#| label: CoastGUAPreAnalysis
lcwgs_coast_gua <- read.pcadapt(
  here("plink2", "8-Embiotoca_filtered_coastal_gua.bed"),
  type = "bed"
)

pcadapt(input = lcwgs_coast_gua, K = 20) |> plot(option = "screeplot")
```

K = 3 seems correct

### Analysis using K = 3
```{r}
#| label: CoastGUApcadapt

popmap_lcwgs_coast_gua <- c(
  rep("bodega_bay",            5), # BB
  rep("big_creek",            13), # BIGC -> BCR
  rep("elkhorn",               6), # ELK
  rep("guadalupe_island",     10), # GUA
  rep("pacific_grove",        13), # HOP -> Pacific Grove PGR
  rep("laguna_beach",         13), # LB
  rep("point_dume",            5), # PD
  rep("santa_barbara",        13), # SB
  rep("la_jolla_san_diego",   13), # SD
  rep("tomales_bay",           1), # TB
  rep("redondo_beach",        10), # RB
  rep("santa_cruz_harbour",   10)  # SCH
)

pcadapt_lcwgs_coast_gua <- lcwgs_coast_gua |> pcadapt(K = 3)
```

```{r}
#| eval: false

pcadapt_lcwgs_coast_gua |>
  write_rds(file = here("output", "pcadapt_lcwgs_coast_gua.rds"))
```

### Associated exploratory plots
```{r}
#| label: CoastGUAExploPlots

coast_gua_PCA_1_2 <- pcadapt_lcwgs_coast_gua |>
  plot(option = "scores", pop = popmap_lcwgs_coast_gua, i = 1, j = 2) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_gua_PCA_1_2.pdf"),
  plot   = coast_gua_PCA_1_2,
  width  = 10,
  height = 8
)

coast_gua_PCA_2_3 <- pcadapt_lcwgs_coast_gua |>
  plot(option = "scores", pop = popmap_lcwgs_coast_gua, i = 2, j = 3) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_gua_PCA_2_3.pdf"),
  plot   = coast_gua_PCA_2_3,
  width  = 10,
  height = 8
)

pcadapt_lcwgs_coast_gua |> plot(option = "qqplot") + theme_minimal()

coast_gua_manhattan <- pcadapt_lcwgs_coast_gua |>
  plot(option = "manhattan") +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_gua_manhattan.png"),
  plot   = coast_gua_manhattan,
  width  = 16,
  height = 4
)

pcadapt_lcwgs_coast_gua$pvalues |> hist(
  xlab   = "p-values",
  main   = NULL,
  breaks = 50,
  col    = "orange"
)
```

```{r}
#| label: CoastGUAMemclean

rm(lcwgs_coast_gua, coast_gua_PCA_1_2, coast_gua_PCA_2_3, coast_gua_manhattan)
```

## Coast + CAT

### Generating whitelist

```{r}
#| label: CoastCATSaveWhitelist
#| eval: false

read_csv2(here("data", "individuals_coordinates.csv")) |>
  pull(Indiv) |> 
  {\(x) {
    x[!(grepl(pattern = "ISJ", x = x) |
        grepl(pattern = "SCL", x = x) |
        grepl(pattern = "GUA", x = x))]
    }}() |> 
  write_lines(here("plink2", "whitelist_coastal_cat.txt"))
```

### Generating bed file
```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered --keep whitelist_coastal_cat.txt --make-bed --out 8-Embiotoca_filtered_coastal_cat
```

### Preanalysis to determine optimal K value
```{r}
#| label: CoastCATPreAnalysis
lcwgs_coast_cat <- read.pcadapt(
  here("plink2", "8-Embiotoca_filtered_coastal_cat.bed"),
  type = "bed"
)

pcadapt(input = lcwgs_coast_cat, K = 20) |> plot(option = "screeplot")
```

K = 3 seems correct

### Analysis using K = 3
```{r}
#| label: CoastCATpcadapt

popmap_lcwgs_coast_cat <- c(
  rep("bodega_bay",            5), # BB
  rep("big_creek",            13), # BIGC -> BCR
  rep("catalina_island",      11), # CAT
  rep("elkhorn",               6), # ELK
  rep("pacific_grove",        13), # HOP -> Pacific Grove PGR
  rep("laguna_beach",         13), # LB
  rep("point_dume",            5), # PD
  rep("santa_barbara",        13), # SB
  rep("la_jolla_san_diego",   13), # SD
  rep("tomales_bay",           1), # TB
  rep("redondo_beach",        10), # RB
  rep("santa_cruz_harbour",   10)  # SCH
)

pcadapt_lcwgs_coast_cat <- lcwgs_coast_cat |> pcadapt(K = 3)
```

```{r}
#| eval: false

pcadapt_lcwgs_coast_cat |> 
  write_rds(file = here("output", "pcadapt_lcwgs_coast_cat.rds"))
```

### Associated exploratory plots
```{r}
#| label: CoastCATExploPlots

coast_cat_PCA_1_2 <- pcadapt_lcwgs_coast_cat |>
  plot(option = "scores", pop = popmap_lcwgs_coast_cat, i = 1, j = 2) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_cat_PCA_1_2.pdf"),
  plot   = coast_cat_PCA_1_2,
  width  = 10,
  height = 8
)

coast_cat_PCA_2_3 <- pcadapt_lcwgs_coast_cat |>
  plot(option = "scores", pop = popmap_lcwgs_coast_cat, i = 2, j = 3) +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_cat_PCA_2_3.pdf"),
  plot   = coast_cat_PCA_2_3,
  width  = 10,
  height = 8
)

pcadapt_lcwgs_coast_cat |> plot(option = "qqplot") + theme_minimal()

coast_cat_manhattan <- pcadapt_lcwgs_coast_cat |>
  plot(option = "manhattan") +
  theme_minimal()

save_open_plot(
  here("output", "plots", "coast_cat_manhattan.png"),
  plot   = coast_cat_manhattan,
  width  = 16,
  height = 4
)

pcadapt_lcwgs_coast_cat$pvalues |> hist(
  xlab   = "p-values",
  main   = NULL,
  breaks = 50,
  col    = "orange"
)
```

```{r}
#| label: CoastCATMemclean

rm(lcwgs_coast_cat, coast_cat_PCA_1_2, coast_cat_PCA_2_3, coast_cat_manhattan)
```

# Outliers Coast + ISJ

## Get outliers sequences and positions

### Read genome
```{r}
lcwgs_catalog <- read.dna(
    here("data", "JAKOON01_catalog", "catalog.fa"),
    format       = "fasta",
    as.character = TRUE
  )

names(lcwgs_catalog) <- names(lcwgs_catalog) |>
  str_split(pattern = " ") |>
  map(\(x) x[1]) |>
  unlist()
```

### Adjusted pvalues

```{r}
padj <- p.adjust(pcadapt_lcwgs_coast$pvalues, method = "bonferroni")
alpha <- 0.1
outliers <- which(padj < alpha)
length(outliers)
```

### Get pvalues map from coastal individuals analysis
```{r}
pcadapt_lcwgs_coast <- readRDS(here("output", "pcadapt_lcwgs_coast.rds"))

pvalues_positions_filtered_dup <- readRDS(file = here("data", "SNP_positions.rds")) |> 
  select(-c(lab_position, coloured, rank)) |> 
  mutate(
    pvalues    = pcadapt_lcwgs_coast$pvalues,
    logpvalues = Get_pvalues(pcadapt_lcwgs_coast)
  ) |> # Extract pvalues
  filter(is.na(pvalues) == FALSE) |>
  filter(logpvalues >= 200) |> # Filtered
  mutate(dist = c(0, diff(POS))) |> 
  filter(dist >= 500) |>
  select(-c(dist)) # Removed duplicates
```

### Get corresponding read windows
```{r}
chromosomes_length <- read_tsv(here("data", "JAKOON01_catalog", "JAKOON01_contigs.tsv"))

pvalues_positions_filtered_dup_sequences <- pvalues_positions_filtered_dup |>
  mutate(
    sequences = row_number() |>
      map(
        \(x) lcwgs_catalog[[CHROM[[x]]]][Get_window(CHROM[[x]], POS[[x]])] |>
          paste(collapse = "") |>
          toupper()
      ) |> 
      unlist()
    )
```

### Write to fasta files
```{r}
pvalues_positions_filtered_dup_sequences |>
  mutate(seq_name = paste0(">", CHROM, " POS: ", as.character(POS))) |>
  select(seq_name, sequences) |> 
  filter(row_number() %in% 1:200) |> 
  write.table(
    file      = here("output", "lcwgs_outliers_sequences_1.fa"),
    sep       = "\n",
    row.names = FALSE,
    col.names = FALSE,
    quote     = FALSE
  )

pvalues_positions_filtered_dup_sequences |>
  mutate(seq_name = paste0(">", CHROM, " POS: ", as.character(POS))) |>
  select(seq_name, sequences) |> 
  filter(row_number() %in% 201:400) |> 
  write.table(
    file      = here("output", "lcwgs_outliers_sequences_2.fa"),
    sep       = "\n",
    row.names = FALSE,
    col.names = FALSE,
    quote     = FALSE
  )

pvalues_positions_filtered_dup_sequences |>
  mutate(seq_name = paste0(">", CHROM, " POS: ", as.character(POS))) |>
  select(seq_name, sequences) |> 
  filter(row_number() %in% 401:456) |> 
  write.table(
    file      = here("output", "lcwgs_outliers_sequences_3.fa"),
    sep       = "\n",
    row.names = FALSE,
    col.names = FALSE,
    quote     = FALSE
  )
```

```{r}
rm(chromosomes_length,
   pvalues_positions_filtered_dup_sequences)
gc()
```

## Extract outliers annotations from ncbi genome annotations

### Load external info

```{r}
EJA_annotations <- here("data", "EJA_annotations.gff") |>
  read.gff() |>
  as_tibble()

chromosomes_info <- here("data", "JAKOON01_catalog", "sequence_report.tsv") |> 
  read_tsv() |>
  select(c(`GenBank seq accession`, `RefSeq seq accession`))
```

### Get annotations

```{r}
pvalues_positions_filtered_dup_annotations <- pvalues_positions_filtered_dup |>
  Get_annotations(
    chrom_info     = chromosomes_info,
    gff_annotation = EJA_annotations
  )
```

### Memory cleanup

```{r}
rm(EJA_annotations, chromosomes_info, pvalues_positions_filtered_dup)
gc()
```

### Sort and filter info

```{r}
pvalues_positions_filtered_dup_annotations_genes <- pvalues_positions_filtered_dup_annotations |>
  unnest(annotation) |>
  filter(grepl("ID=gene", annotation)) |>
  mutate(
    annotation_ID          = annotation |>
      str_split_i(pattern = ";", i = 1) |>
      str_remove(pattern = "ID="),
    annotation_description = annotation |>
      str_split_i(pattern = ";", i = 4) |>
      str_remove(pattern = "description=")
  ) |> 
  select(-c(annotation)) |>
  distinct(annotation_ID, .keep_all = TRUE)

pvalues_positions_filtered_dup_annotations_rnas <- pvalues_positions_filtered_dup_annotations |>
  unnest(annotation) |>
  filter(grepl("ID=rna", annotation)) |>
  mutate(
    annotation_ID      = annotation |>
      str_split_i(pattern = ";", i = 1) |>
      str_remove(pattern = "ID="),
    annotation_product = annotation |>
      str_match("product=\\s*(.*?)\\s*;") |>
      _[, 2]
  ) |>
  select(-c(annotation)) |>
  distinct(annotation_ID, .keep_all = TRUE)

pvalues_positions_filtered_dup_annotations_exons <- pvalues_positions_filtered_dup_annotations |>
  unnest(annotation) |>
  filter(grepl("ID=exon", annotation)) |>
  mutate(
    annotation_ID      = annotation |>
      str_split_i(pattern = ";", i = 1) |>
      str_remove(pattern = "ID="),
    annotation_gene    = annotation |>
      str_match("gene=\\s*(.*?)\\s*;") |>
      _[, 2],
    annotation_product = annotation |>
      str_match("product=\\s*(.*?)\\s*;") |>
      _[, 2]
  ) |>
  select(-c(annotation)) |>
  distinct(annotation_ID, .keep_all = TRUE)

pvalues_positions_filtered_dup_annotations_cds <- pvalues_positions_filtered_dup_annotations |>
  unnest(annotation) |>
  filter(grepl("ID=cds", annotation)) |>
  mutate(
    annotation_ID      = annotation |>
      str_split_i(pattern = ";", i = 1) |>
      str_remove(pattern = "ID="),
    annotation_gene    = annotation |>
      str_match("gene=\\s*(.*?)\\s*;") |>
      _[, 2],
    annotation_product = annotation |>
      str_match("product=\\s*(.*?)\\s*;") |>
      _[, 2]
  ) |>
  select(-c(annotation)) |>
  distinct(annotation_ID, .keep_all = TRUE)

pvalues_positions_filtered_dup_annotations_all <- bind_rows(
  pvalues_positions_filtered_dup_annotations_genes,
  pvalues_positions_filtered_dup_annotations_rnas,
  pvalues_positions_filtered_dup_annotations_exons,
  pvalues_positions_filtered_dup_annotations_cds
) |> 
  mutate(
    annotation_type        = annotation_ID |> str_split_i(pattern = "-", i = 1),
    annotation_ID          = annotation_ID |> str_split_i(pattern = "-", i = 2),
    annotation_description = annotation_description |>
      str_remove_all(pattern = "%2C"),
    annotation_product     = annotation_product |>
      str_remove_all(pattern = "%2C")
  ) |>
  select(
    c("GenBank seq accession", "POS",
      "RefSeq seq accession", "annotation_type", "annotation_ID",
      "annotation_description", "annotation_product", "annotation_gene",
      "pvalues", "logpvalues")
  ) |> 
  arrange(pvalues, `GenBank seq accession`, POS)
```

### Save as file and cleanup

```{r}
pvalues_positions_filtered_dup_annotations_all |>
  write_csv2(here("output", "lcwgs_EJA_outliers_annotations.csv"))

rm(pvalues_positions_filtered_dup_annotations_genes,
   pvalues_positions_filtered_dup_annotations_rnas,
   pvalues_positions_filtered_dup_annotations_exons,
   pvalues_positions_filtered_dup_annotations_cds)
```

## Get BLAST results

```{r}
pvalues_positions <- pvalues_positions |>
  mutate(Rank = paste0(CHROM, " POS: ", as.character(POS)))

lcwgs_EJA_outliers_blast_tib <- c("GZSEDPGT016-Alignment.xml",
                                  "GZSJHA6W016-Alignment.xml",
                                  "GZSMYB0J016-Alignment.xml") |> # "Single-file XML2" file from NCBI BLASTn output is expected
  here("data", "BLASTs") |>
  map( \(x) read_xml(x) |> XML_to_df()) |> 
  bind_rows() |>
  left_join(pvalues_positions)

rm(pvalues_positions)
```

### Filter BLAST results

```{r}
lcwgs_EJA_outliers_blast_tib_filtered <- lcwgs_EJA_outliers_blast_tib |>
  filter(bit_score >= 80) |> 
  filter(!grepl("genome assembly", title)) |> 
  filter(!duplicated(Rank)) |> # Keep the first match for each locus
  filter(!duplicated(accession_number))
```

```{r}
write_csv2(
  lcwgs_EJA_outliers_blast_tib_filtered,
  file = here("output", "lcwgs_outliers_match.csv")
)
```

### Get protein sequences from GenBank

```{r}
lcwgs_protein_sequences <- lcwgs_EJA_outliers_blast_tib_filtered |> Get_protein_sequences()
```

### Save output as fasta file which can be sent to [blast KOALA](https://www.kegg.jp/blastkoala/).

```{r}
lcwgs_protein_sequences |> 
  mutate(accession_number = paste0("> ", accession_number)) |>
  write.table(
    file      = here("output", "lwcgs_EJA_outliers_protein_sequences.fa"),
    sep       = "\n",
    row.names = FALSE,
    col.names = FALSE,
    quote     = FALSE
  )
```

## Get BLAST results A. ocellaris

```{r}
pvalues_positions <- readRDS(
  file = here("data", "SNP_positions.rds")
) |> 
  mutate(
    pvalues = pcadapt_lcwgs_coast$pvalues,
    logpvalues = Get_pvalues(pcadapt_lcwgs_coast)
  ) |>
  mutate(Rank = paste0(CHROM, " POS: ", as.character(POS)))
```

```{r}
lcwgs_EJA_outliers_blast_A_ocellaris_tib <- c("HFHS4UE9013-Alignment.xml",
                                              "HFHRYX38013-Alignment.xml",
                                              "HFHSG8SF016-Alignment.xml") |> # "Single-file XML2" file from NCBI BLASTn output is expected
  here("data", "BLASTs") |>
  map( \(x) read_xml(x) |> XML_to_df()) |> 
  bind_rows() |>
  left_join(pvalues_positions)

rm(pvalues_positions)
```

```{r}
lcwgs_EJA_outliers_blast_A_ocellaris_tib_filtered <- lcwgs_EJA_outliers_blast_A_ocellaris_tib |>
  filter(bit_score >= 80) |> 
  filter(!grepl("genome assembly", title)) |> 
  filter(!duplicated(Rank)) |> # Keep the first match for each locus
  filter(!duplicated(accession_number))

lcwgs_EJA_outliers_blast_A_ocellaris_tib_filtered |>
  write.csv2(here("output", "lcwgs_outliers_match_A_ocellaris.csv"))
```

# Outliers Coast - ISJ

## Get outliers

### Adjusted pvalues

```{r}
padj <- p.adjust(pcadapt_lcwgs_coast$pvalues, method = "bonferroni")
alpha <- 0.1
outliers <- which(padj < alpha)
length(outliers)
```

### Get pvalues map from coastal individuals analysis
```{r}
pcadapt_lcwgs_coast <- readRDS(here("output", "pcadapt_lcwgs_coast.rds"))

outliers_positions_coast <- readRDS(file = here("data", "SNP_positions.rds")) |> 
  mutate(
    padj = p.adjust(pcadapt_lcwgs_coast$pvalues, method = "bonferroni")
  ) |> # Extract pvalues
  filter(padj < .1)
```

## Extract outliers annotations from ncbi genome annotations

### Load external info

```{r}
EJA_annotations <- here("data", "EJA_annotations.gff") |>
  read.gff() |>
  as_tibble()

chromosomes_info <- here("data", "JAKOON01_catalog", "sequence_report.tsv") |> 
  read_tsv() |>
  select(c(`GenBank seq accession`, `RefSeq seq accession`))
```

### Get annotations

```{r}
outliers_positions_coast_annotations <- outliers_positions_coast |>
  Get_annotations(
    chrom_info     = chromosomes_info,
    gff_annotation = EJA_annotations
  )
```

### Memory cleanup

```{r}
rm(EJA_annotations, chromosomes_info)
gc()
```

### Sort and filter info

```{r}
outliers_positions_coast_annotations_genes <- outliers_positions_coast_annotations |>
  unnest(annotation) |>
  filter(grepl("ID=gene", annotation)) |>
  mutate(
    annotation_ID          = annotation |>
      str_split_i(pattern = ";", i = 1) |>
      str_remove(pattern = "ID="),
    annotation_description = annotation |>
      str_split_i(pattern = ";", i = 4) |>
      str_remove(pattern = "description=")
  ) |> 
  select(-c(annotation)) |>
  distinct(annotation_ID, .keep_all = TRUE)

outliers_positions_coast_annotations_rnas <- outliers_positions_coast_annotations |>
  unnest(annotation) |>
  filter(grepl("ID=rna", annotation)) |>
  mutate(
    annotation_ID      = annotation |>
      str_split_i(pattern = ";", i = 1) |>
      str_remove(pattern = "ID="),
    annotation_product = annotation |>
      str_match("product=\\s*(.*?)\\s*;") |>
      _[, 2]
  ) |>
  select(-c(annotation)) |>
  distinct(annotation_ID, .keep_all = TRUE)

outliers_positions_coast_annotations_exons <- outliers_positions_coast_annotations |>
  unnest(annotation) |>
  filter(grepl("ID=exon", annotation)) |>
  mutate(
    annotation_ID      = annotation |>
      str_split_i(pattern = ";", i = 1) |>
      str_remove(pattern = "ID="),
    annotation_gene    = annotation |>
      str_match("gene=\\s*(.*?)\\s*;") |>
      _[, 2],
    annotation_product = annotation |>
      str_match("product=\\s*(.*?)\\s*;") |>
      _[, 2]
  ) |>
  select(-c(annotation)) |>
  distinct(annotation_ID, .keep_all = TRUE)

outliers_positions_coast_annotations_cds <- outliers_positions_coast_annotations |>
  unnest(annotation) |>
  filter(grepl("ID=cds", annotation)) |>
  mutate(
    annotation_ID      = annotation |>
      str_split_i(pattern = ";", i = 1) |>
      str_remove(pattern = "ID="),
    annotation_gene    = annotation |>
      str_match("gene=\\s*(.*?)\\s*;") |>
      _[, 2],
    annotation_product = annotation |>
      str_match("product=\\s*(.*?)\\s*;") |>
      _[, 2]
  ) |>
  select(-c(annotation)) |>
  distinct(annotation_ID, .keep_all = TRUE)

outliers_positions_coast_annotations_all <- bind_rows(
  outliers_positions_coast_annotations_genes,
  outliers_positions_coast_annotations_rnas,
  outliers_positions_coast_annotations_exons,
  outliers_positions_coast_annotations_cds
) |> 
  mutate(
    annotation_type        = annotation_ID |> str_split_i(pattern = "-", i = 1),
    annotation_ID          = annotation_ID |> str_split_i(pattern = "-", i = 2),
    annotation_description = annotation_description |>
      str_remove_all(pattern = "%2C"),
    annotation_product     = annotation_product |>
      str_remove_all(pattern = "%2C")
  ) |>
  select(
    c("GenBank seq accession", "POS",
      "RefSeq seq accession", "annotation_type", "annotation_ID",
      "annotation_description", "annotation_product", "annotation_gene",
      "padj")
  ) |> 
  arrange(padj, `GenBank seq accession`, POS)
```

### Save as file and cleanup

```{r}
outliers_positions_coast_annotations_all |>
  write_csv2(here("output", "lcwgs_EJA_coast-isj_outliers_annotations.csv"))

rm(outliers_positions_coast_annotations_genes,
   outliers_positions_coast_annotations_rnas,
   outliers_positions_coast_annotations_exons,
   outliers_positions_coast_annotations_cds)
```


# Admixture analysis

## Convert data to ped format for LEA import using plink2
```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2
./plink2 --vcf 8-Embiotoca_filtered.vcf.gz --export ped --out 8-Embiotoca_filtered
```

## Read and convert data
```{r}
#| label: VcfConvert
#| eval: false

ped2geno(
  input.file  = here("plink2", "8-Embiotoca_filtered.ped"),
  output.file = here("data", "SNPs", "8-Embiotoca_filtered.geno")
)
```

## Run analysis
```{r}
#| label: snmfAnalysisSingle

snmf_analysis <- snmf(
  here("data", "SNPs", "8-Embiotoca_filtered.geno"),
  K           = 4:8,
  project     = "continue",
  repetitions = 50,
  entropy     = TRUE
)
```

## Plot cross entropy to chose optimal value of K
```{r}
#| label: snmfSinglePlot

plot(snmf_analysis)

snmf_tb <- tibble(K = as.numeric(unique(snmf_analysis@K)))

cross_entropy <- rep(0, dim(snmf_tb)[1])

for (i in 1:length(snmf_tb$K)) {
  cross_entropy[i] <- min(cross.entropy(snmf_analysis, K = snmf_tb$K[i]))
}

snmf_plot <- snmf_tb |>
  mutate(cross_entropy = cross_entropy) |> 
  ggplot() +
  geom_point(aes(x = K, y = cross_entropy)) +
  theme_classic()

ggsave(
  filename = here("output", "plots", "snmf_cross_entropy.png"),
  plot     = snmf_plot,
  width    = 8,
  height   = 5
)
```

K = 7 has the minimum cross-entropy.

## Plot results for K = 7
```{r}
#| label: snmfAnalysisMultiPlot

barchart(
  snmf_analysis,
  K         = 7,
  run       = which.min(cross.entropy(snmf_analysis, K = 7)),
  col       = viridis::turbo(n = 6),
  sort.by.Q = FALSE
)
```

# Triangular plots

## For North-South Gradient

```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered_coastal-isj --keep-allele-order --recode vcf --out 8-Embiotoca_filtered_coastal-isj
```

```{r}
EJA_lcwgs_coast_isj_vcf <- read.vcfR(here("data", "SNPS", "8-Embiotoca_filtered_coastal-isj.vcf"))

popmap_lcwgs_coast_isj <- read_csv2(here("data", "individuals_coordinates.csv")) |> 
  select(Indiv, Localisation) |>
  rename(id = Indiv, pop = Localisation) |> 
  filter(pop != c("CAT")) |> 
  filter(pop != c("ISJ")) |>
  filter(pop != c("SCL")) |> 
  filter(pop != c("GUA")) |> 
  data.frame()
```

```{r}
EJA_lcwgs_coast_isj_vcf_diffs <- vector(mode='list', length=3)
parameters <- c(.5, .75, 1)

for (i in 1:3) {
  EJA_lcwgs_coast_isj_vcf_diffs[[i]] <- alleleFreqDiff(EJA_lcwgs_coast_isj_vcf,
                                                       pm = popmap_lcwgs_coast_isj,
                                                       p1 = "BBA", p2 = "SD",
                                                       difference = parameters[i])
}

rm(EJA_lcwgs_coast_isj_vcf)
```
with 1 difference : "8456 sites passed allele frequency difference threshold"

Difference = .75 76178

Difference = .5 : 276405 sites

```{r}
hi_het_coast_isj <- vector(mode='list', length=3)

for (i in 1:3) {
  hi_het_coast_isj[[i]] <- hybridIndex(EJA_lcwgs_coast_isj_vcf_diffs[[i]],
                                       pm = popmap_lcwgs_coast_isj,
                                       p1 = "BBA", p2 = "SD")
}
```

```{r}
#| eval: false

write_rds(hi_het_coast_isj, here("output", "Triangle_analysis_coast_isj.rds"))
```

```{r}
hi_het_coast_isj_plots <- vector(mode='list', length=3)

for (i in 1:3) {
  hi_het_coast_isj_plots[[i]] <- hi_het_coast_isj[[i]] |>
    mutate(
      pop = factor(
        pop,
        levels = c("BBA", "TB", "SCH", "ELK", "HOP",
                   "BIGC", "SB", "PD", "RB", "LAG", "SD")
      )
    ) |> 
    arrange(pop) |>
    triangle.plot(colors = turbo(n = 11)) +
    labs(title = paste0("d = ", as.character(parameters[i])))
}

save_open_plot(
  path   = here("output", "plots", "coast-isj_Triangle_plots.pdf"),
  plot   = Reduce("+", hi_het_coast_isj_plots) +
    plot_layout(axis_titles = "collect", guides = "collect"),
  width  = 14,
  height = 4
)
```

```{r}
rm(EJA_lcwgs_coast_isj_vcf_diffs, hi_het_coast_isj, hi_het_coast_isj_plots)
gc()
```


## For Coastal + ISJ

```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered_coastal_isj --keep-allele-order --recode vcf --out 8-Embiotoca_filtered_coastal_isj
```

```{r}
EJA_lcwgs_coast_isj_vcf <- read.vcfR(here("plink2", "8-Embiotoca_filtered_coastal_isj.vcf"))

popmap_lcwgs_coast_isj <- read_csv2(here("data", "individuals_coordinates.csv")) |> 
  select(Indiv, Localisation) |>
  rename(id = Indiv, pop = Localisation) |> 
  filter(pop != c("CAT")) |> 
  filter(pop != c("SCL")) |> 
  filter(pop != c("GUA")) |> 
  data.frame()
```

```{r}
EJA_lcwgs_coast_isj_vcf_diff <- vector(mode='list', length=3)
parameters <- c(.5, .75, 1)

for (i in 1:3) {
  EJA_lcwgs_coast_isj_vcf_diff[[i]] <- alleleFreqDiff(EJA_lcwgs_coast_isj_vcf,
                                                      pm = popmap_lcwgs_coast_isj,
                                                      p1 = "BBA", p2 = "ISJ",
                                                      difference = parameters[i])
}

rm(EJA_lcwgs_coast_isj_vcf)
gc()
```
With 1 : "32484 sites passed allele frequency difference threshold"
With .75 : "166077 sites passed allele frequency difference threshold"
With .5 : "424389 sites passed allele frequency difference threshold"

```{r}
hi_het_coast_isj <- vector(mode='list', length=3)

for (i in 1:3) {
  hi_het_coast_isj[[i]] <- hybridIndex(EJA_lcwgs_coast_isj_vcf_diff[[i]],
                                       pm = popmap_lcwgs_coast_isj,
                                       p1 = "BBA", p2 = "ISJ")
}
```

```{r}
#| eval: false

write_rds(hi_het_coast_isj, here("output", "Triangle_analysis_coast_isj.rds"))
```

```{r}
hi_het_coast_isj_plots <- vector(mode='list', length=3)

for (i in 1:3) {
  hi_het_coast_isj_plots[[i]] <- hi_het_coast_isj[[i]] |>
    mutate(
      pop = factor(
        pop,
        levels = c("BBA", "TB", "SCH", "ELK", "HOP", "BIGC",
                   "SB",  "PD", "RB",  "LAG", "SD",  "ISJ")
      )
    ) |> 
    arrange(pop) |>
    triangle.plot(colors = turbo(n = 12)) +
    labs(title = paste0("d = ", as.character(parameters[i])))
}

save_open_plot(
  path   = here("output", "plots", "coast_isj_Triangle_plots.pdf"),
  plot   = Reduce("+", hi_het_coast_isj_plots) +
    plot_layout(axis_titles = "collect", guides = "collect"),
  width  = 14,
  height = 4
)
```

```{r}
rm(EJA_lcwgs_coast_isj_vcf_diff, hi_het_coast_isj, hi_het_coast_isj_plots)
gc()
```

## For North

```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered_north --keep-allele-order --recode vcf --out 8-Embiotoca_filtered_north
```

```{r}
EJA_lcwgs_north_vcf <- read.vcfR(here("plink2", "8-Embiotoca_filtered_north.vcf"))

popmap_lcwgs_north <- read_csv2(here("data", "individuals_coordinates.csv")) |> 
  select(Indiv, Localisation) |>
  rename(id = Indiv, pop = Localisation) |> 
  filter(pop %in% c("BBA", "BIGC", "ELK", "HOP", "SB", "TB", "SCH")) |> 
  data.frame()
```

```{r}
EJA_lcwgs_north_vcf_diff <- vector(mode='list', length=3)
parameters <- c(.5, .75, 1)

for (i in 1:3) {
  EJA_lcwgs_north_vcf_diff[[i]] <- alleleFreqDiff(EJA_lcwgs_north_vcf,
                                                  pm = popmap_lcwgs_north,
                                                  p1 = "BBA", p2 = "SB",
                                                  difference = parameters[i])
}

rm(EJA_lcwgs_north_vcf)
gc()
```

Difference = 1.0 : 2348 sites
Difference = 0.9 : 9364 sites
Difference = 0.8 : 26991 sites (>1% SNPs)
Difference = 0.75 : 38762
Difference = 0.7 : 55736 sites
Difference = 0.5 : 183805 sites

```{r}
hi_het_north <- vector(mode='list', length=3)

for (i in 1:3) {
  hi_het_north[[i]] <- hybridIndex(EJA_lcwgs_north_vcf_diff[[i]],
                                   pm = popmap_lcwgs_north,
                                   p1 = "BBA", p2 = "SB")
}
```

```{r}
#| eval: false

write_rds(hi_het_north, here("output", "Triangle_analysis_north.rds"))
```

```{r}
hi_het_north_plots <- vector(mode='list', length=3)

for (i in 1:3) {
  hi_het_north_plots[[i]] <- hi_het_north[[i]] |>
    mutate(
      pop = factor(
        pop,
        levels = c("BBA", "TB", "SCH", "ELK", "HOP", "BIGC", "SB")
      )
    ) |> 
    arrange(pop) |>
    triangle.plot(colors = turbo(n = 7)) +
    labs(title = paste0("d = ", as.character(parameters[i])))
}

save_open_plot(
  path   = here("output", "plots", "north_Triangle_plots.pdf"),
  plot   = Reduce("+", hi_het_north_plots) +
    plot_layout(axis_titles = "collect", guides = "collect"),
  width  = 14,
  height = 4
)
```


```{r}
rm(EJA_lcwgs_north_vcf_diff, hi_het_north, hi_het_north_plots)
gc()
```

## For South

```{bash}
cd C:/Users/aoules/Desktop/R_projects/Surfperch_GenPop/plink2

./plink2 --bfile 8-Embiotoca_filtered_south --keep-allele-order --recode vcf --out 8-Embiotoca_filtered_south
```

```{r}
EJA_lcwgs_south_vcf <- read.vcfR(here("plink2", "8-Embiotoca_filtered_south.vcf"))

popmap_lcwgs_south <- read_csv2(here("data", "individuals_coordinates.csv")) |> 
  select(Indiv, Localisation) |>
  rename(id = Indiv, pop = Localisation) |> 
  filter(pop %in% c("SB", "PD", "RB", "LAG", "SD")) |> 
  data.frame()
```

```{r}
EJA_lcwgs_south_vcf_diff <- vector(mode='list', length=3)
parameters <- c(.5, .75, 1)

for (i in 1:3) {
  EJA_lcwgs_south_vcf_diff[[i]] <- alleleFreqDiff(EJA_lcwgs_south_vcf,
                                                  pm = popmap_lcwgs_south,
                                                  p1 = "SB", p2 = "SD",
                                                  difference = parameters[i])
}

rm(EJA_lcwgs_south_vcf)
gc()
```

With 1 : 234
.75 : 3367
.5 : 54787

```{r}
hi_het_south <- vector(mode='list', length=3)

for (i in 1:3) {
  hi_het_south[[i]] <- hybridIndex(EJA_lcwgs_south_vcf_diff[[i]],
                                   pm = popmap_lcwgs_south,
                                   p1 = "SB", p2 = "SD")
}
```

```{r}
#| eval: false

write_rds(hi_het_south, here("output", "Triangle_analysis_south.rds"))
```

```{r}
hi_het_south_plots <- vector(mode='list', length=3)

for (i in 1:3) {
  hi_het_south_plots[[i]] <- hi_het_south[[i]] |>
    mutate(
      pop = factor(
        pop,
        levels = c("SB", "PD", "RB", "LAG", "SD")
      )
    ) |> 
    arrange(pop) |>
    triangle.plot(colors = turbo(n = 5)) +
    labs(title = paste0("d = ", as.character(parameters[i])))
}

save_open_plot(
  path   = here("output", "plots", "south_Triangle_plots.pdf"),
  plot   = Reduce("+", hi_het_south_plots) +
    plot_layout(axis_titles = "collect", guides = "collect"),
  width  = 14,
  height = 4
)
```

```{r}
rm(EJA_lcwgs_south_vcf_diff, hi_het_south, hi_het_south_plots)
gc()
```