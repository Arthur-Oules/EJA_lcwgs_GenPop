---
title: "Extra figures"
format: html
editor: source
---

## Figure 2 - Islands Bathymetry

### Data

```{r}
#| label: BathyPrep

currents_tibble_annual_mean <- left_join(
  rast(
    x     = here("data", "Copernicus", "merged_uv",
                 "cmems_mod_glo_phy-cur_anfc_0.083deg_P1D-m_1721914334862.nc"),
    subds = "uo"
  ) |>
    mean() |> # Average on year
    as.data.frame(xy = TRUE, na.rm = FALSE) |> 
    as_tibble() |> 
    rename(u_mean = mean),
  rast(
    x     = here("data", "Copernicus", "merged_uv",
                "cmems_mod_glo_phy-cur_anfc_0.083deg_P1D-m_1721914334862.nc"),
    subds = "vo"
  ) |>
    mean() |> # Average on year
    as.data.frame(xy = TRUE, na.rm = FALSE) |> 
    as_tibble() |> 
    rename(v_mean = mean),
)

catalina_df <- getNOAA.bathy(
    lon1 = -121, lon2 = -116,
    lat1 = 32,   lat2 = 35,
    resolution = .5
  ) |> 
  fortify.bathy() |>
  mutate(z = ifelse(z > 0, NA, z)) # Remove landmass data

states <- ne_states(
  country     = c("united states of america", "mexico"),
  returnclass = "sf"
)
```

### Map

```{r}
#| label: BathyPrep

bathy <- ggplot() +
  # Plot bathymetry
  geom_raster(data = catalina_df, mapping = aes(x = x, y = y, fill = z)) +
  # Plot landmass
  geom_sf(data = states) +
  # Plot surface current speed
  geom_segment(
    data      = currents_tibble_annual_mean,
    mapping   = aes(
      x    = x,
      y    = y,
      xend = x + u_mean,
      yend = y + v_mean
    ),
    linewidth = .5,
    colour    = "#4d4d4d",
    arrow     = arrow(angle = 20, length = unit(0.035, "inches"), type = "closed"),
    linejoin  = "mitre",
    na.rm     = TRUE
  ) +
  # Plot scales
  scale_fill_hypso_tint_c(palette = "colombia_bathy", limits = range(catalina_df$z, na.rm = TRUE)) +
  geom_label(
    aes(x = -120.4, y = 32.3, label = ".25 m/s\n"),
    size = 4.5,
    label.padding = unit(0.5, "lines")
  ) +
  geom_segment(
    aes(x = -120.52, y = 32.25, xend = -120.27, yend = 32.25),
    arrow = arrow(angle = 15, length = unit(0.04, "inches"), type = "closed")
  ) +
  geom_label(aes(x = -119.705, y = 32.08, label = "        ")) +
  annotation_scale(location = "bl", width_hint = 0.4) +
  annotation_north_arrow(
    location = "tr",
    style    = north_arrow_fancy_orienteering()
  ) +
  # Crop map
  coord_sf(xlim = c(-121, -116), ylim = c(32, 35), expand = FALSE) +
  # Axis labels and theme
  labs(x = "Longitude", y = "Latitude") +
  scale_y_continuous(
    breaks = seq(32, 35, 1),
    labels = unit_format(suffix = "Â°N", sep = "")
  ) +
  theme(
    legend.position = c(.93, .73),
    plot.margin     = margin(t = 0, r = 1, b = 0, l = .5, unit = "cm")
  )
```

```{r}
#| label: BathySave

save_open_plot(
  here("output", "plots", "bathy.pdf"),
  plot   = bathy,
  width  = 9,
  height = 7
)

rm(currents_tibble_annual_mean, catalina_df, states, bathy)
```

## Admixture

### K = 7 populations but higher cross-entropy

```{r}
admixture_data_7_bad <- read_table(
  here("data", "lcwgs", "8-Embiotoca_filtered.snmf", "K7", "run44",
       "8-Embiotoca_filtered_r44.7.Q"),
  col_names = paste0("Pop ", seq(1, 7))
) |> 
  mutate(Individuals = Indiv_list) |> 
  relocate(Individuals) |> 
  pivot_longer(
    -c(Individuals),
    names_to  = "Populations",
    values_to = "Ancestry proportions"
  )

admixture_plot_7_bad <- admixture_data_7_bad |>
  ggplot(
    aes(
      x    = factor(
        Individuals,
        levels = here("data", "Individuals_plot_order.txt") |> 
          read.table() |>
          unlist() |>
          as.vector() 
      ),
      y    = `Ancestry proportions`,
      fill = Populations
    )
  ) +
  geom_col(position = "stack", width = 1) +
  scale_fill_viridis(discrete = TRUE, option = "turbo") +
  labs(x = "Individuals") +
  theme_minimal() +
  theme(
    axis.text.x = element_text(size = 8, angle = 90, vjust = 0.5, hjust = 1)
  )

save_open_plot(
  path   = here("output", "plots", "admixture_plot_K=7_bad.pdf"),
  plot   = admixture_plot_7_bad,
  width  = 16,
  height = 6
)
```

#### Interactive PCA

```{r}
pcadapt_lcwgs <- read_rds(file = here("output", "pcadapt_lcwgs_K9.rds"))

popmap_lcwgs <- factor(
  c(
    rep("bodega_bay",          5), # BB
    rep("big_sur",            13), # BIGC -> BCR -> BS
    rep("santa_catalina_is.", 11), # CAT
    rep("elkhorn",             6), # ELK
    rep("isla_guadalupe",     10), # GUA
    rep("pacific_grove",      13), # HOP -> Pacific Grove PGR 
    rep("isla_san_jeronimo",  11), # ISJ
    rep("laguna_beach",       13), # LB
    rep("point_dume",          5), # PD
    rep("santa_barbara",      13), # SB
    rep("san_clemente_is.",   10), # SCL
    rep("la_jolla_san_diego", 13), # SD
    rep("tomales_bay",         1), # TB
    rep("redondo_beach",      10), # RB
    rep("santa_cruz",         10) # SCH
  ),
  levels = c("big_sur", "bodega_bay", "santa_catalina_is.", "santa_cruz",
             "isla_guadalupe", "isla_san_jeronimo", "la_jolla_san_diego",
             "laguna_beach", "pacific_grove", "point_dume", "tomales_bay",
             "san_clemente_is.", "santa_barbara",
             "elkhorn", "redondo_beach")
)
```

```{r}
#| label: PCAMap2DInteractivePlot

PCA_plot(
  pcadapt_output = pcadapt_lcwgs,
  popmap         = popmap_lcwgs,
  x_offsets      = rep(.01, 15),
  y_offsets      = rep(.05, 15)
) |>
  ggplotly()
```

```{r}
#| label: PCAMapPCAInteractive

TD_PCA_plot <- pcadapt_lcwgs$scores |>
  as_tibble() |>
  rename(PC_1 = V1, PC_2 = V2, PC_3 = V3, PC_4 = V4) |> 
  mutate(pop = popmap_lcwgs) |> 
  as.data.frame() |> 
  plot_ly(
    x = ~PC_1, y = ~PC_2, z = ~PC_3,
    color = ~pop, colors = viridis(144, option = "turbo")
  ) |>
  add_markers(size = 12)

setwd(here("output", "plots"))
as_widget(TD_PCA_plot) |> saveWidget(
  file = here("output", "plots", "3D_PCA.html"),
  selfcontained = TRUE)
setwd(here())

rm(TD_PCA_plot)
```

## Manhattan

### Load Metadata

```{r}
#| label: LoadMetadata

SNP_positions <- readRDS(file = here("data", "SNP_positions.rds"))

chromosome_map <- here("data", "JAKOON01_catalog", "sequence_report.tsv") |> 
  read_tsv() |> 
  select(`GenBank seq accession`, `Sequence name`, `Seq length`) |> 
  filter(
    `GenBank seq accession` %in% (SNP_positions |> distinct(CHROM) |> pull(CHROM))
  ) |> 
  add_row(
    `GenBank seq accession` = "JAKOON010000230.1",
    `Sequence name`         = NA,
    `Seq length`            = NA
  )
```

### Individual plot example

```{r}
#| label: ManhattanPlot

manhattan_plot_lcwgs_K9 <- here("output", "pcadapt_lcwgs_K9.rds") |>
  read_rds() |> 
  manhattan_plot_custom_2(
    SNP_positions   = SNP_positions,
    chromosome_map  = chromosome_map
  )

ggsave(
  here("output", "plots", "manhattan_plot_custom_lcwgsK9.png"),
  plot   = manhattan_plot_lcwgs_K9,
  width  = 30000,
  height = 2000,
  units  = "px",
  limitsize = FALSE
)
```

#### With outliers

```{r}
#| label: ManhattanPlot

manhattan_plot_lcwgs_gua_isj_outliers <- manhattan_plot_custom_2(
  pcadapt            = here("output", "pcadapt_lcwgs_gua_isj.rds") |> read_rds(),
  SNP_positions      = SNP_positions,
  chromosome_map     = chromosome_map,
  outliers_positions = here("output", "pcadapt_lcwgs_gua_isj.rds") |>
    read_rds() |> 
    Get_outliers(pvalue_threshold = 0.05) |> 
    select(CHROM, POS)
)

ggsave(
  here("output", "plots", "manhattan_new", "outliers",
       "manhattan_plot_custom_lcwgs_gua_isj_outliers.png"),
  plot   = manhattan_plot_lcwgs_gua_isj_outliers,
  width  = 6000,
  height = 2000,
  units  = "px"
)

# manhattan_plot_lcwgs_K9_outliers_crop <- manhattan_plot_lcwgs_K9_outliers + coord_cartesian(ylim = c(-1, 200))
```

#### With outliers and match

```{r}
manhattan_plot_lcwgs_gua_isj_outliers_match <- manhattan_plot_custom_2(
  pcadapt            = here("output", "pcadapt_lcwgs_gua_isj.rds") |>
    read_rds(),
  SNP_positions      = SNP_positions,
  chromosome_map     = chromosome_map,
  outliers_positions = here("output", "pcadapt_lcwgs_gua_isj.rds") |>
    read_rds() |> 
    Get_outliers(pvalue_threshold = 0.05) |> 
    select(CHROM, POS),
  outliers_match     = here("output", "EJA_lcwgs_gua_isj_5E-2_outliers_annotations.csv") |> 
    read_csv2() |>
    distinct(`GenBank seq accession`, POS) |> 
    rename("CHROM" = `GenBank seq accession`)
)

ggsave(
  here("output", "plots", "manhattan_new", "match",
       "manhattan_plot_custom_lcwgs_gua_isj_outliers_match.png"),
  plot   = manhattan_plot_lcwgs_gua_isj_outliers_match,
  width  = 6000,
  height = 2000,
  units  = "px"
)
```

### Generate plots with outliers

```{r}
#| label: PlotsGenOutliers

manhattans_outliers <- tibble(
  read_files_pcadapt  = list.files(here("output")) |> str_subset("pcadapt")
) |> 
  mutate(
    plots       = map(
      read_files_pcadapt,
      \(x) manhattan_plot_custom_2(
        pcadapt            = here("output", x) |> read_rds(),
        SNP_positions      = SNP_positions,
        chromosome_map     = chromosome_map,
        outliers_positions = here("output", x) |>
          read_rds() |>
          Get_outliers(pvalue_threshold = .05) |> 
          select(CHROM, POS)
      )
    ),
    write_files = read_files_pcadapt |>
      str_replace("pcadapt", "manhattan_plot_custom") |>
      str_replace(".rds", "_outliers.png")
  )
```

```{r}
#| label: PlotsSaveOutliers

map2(
  manhattans_outliers$write_files, manhattans_outliers$plots,
  \(x, y) {
    ggsave(
      here("output", "plots", "manhattan_new", "outliers", x),
      plot   = y,
      width  = 6000,
      height = 2000,
      units  = "px"
    )
  }
)
```

#### Coast and Islands Multiplot

```{r}
layout <-  "
AA######
BBCC####
DDEEFF##
GGHHIIJJ
"

multi_plot_coast_islands_outliers <- manhattans_outliers$plots[[4]]  +
    manhattans_outliers$plots[[5]] + manhattans_outliers$plots[[9]]  +
    manhattans_outliers$plots[[3]] + manhattans_outliers$plots[[8]]  + manhattans_outliers$plots[[1]] +
    manhattans_outliers$plots[[7]] + manhattans_outliers$plots[[10]] + manhattans_outliers$plots[[13]] + manhattans_outliers$plots[[2]] +
    plot_layout(design = layout, axes = "collect_x", axis_titles = "collect")

ggsave(
  here("output", "plots", "multi_plot_coast_islands_outliers.png"),
  plot   = multi_plot_coast_islands_outliers,
  width  = 12000,
  height = 6000,
  units = "px"
)
```

### Generate plots with match

```{r}
#| label: PlotsGenMatch

manhattans_outliers_match <- tibble(
  read_files_pcadapt = list.files(here("output")) |> str_subset("pcadapt"),
  read_files_match   = list.files(here("output")) |> str_subset("outliers_annotations")
) |> 
  mutate(
    plots       = map2(
      read_files_pcadapt, read_files_match,
      \(x, y) manhattan_plot_custom_2(
        pcadapt            = here("output", x) |> read_rds(),
        SNP_positions      = SNP_positions,
        chromosome_map     = chromosome_map,
        outliers_positions = here("output", x) |>
          read_rds() |>
          Get_outliers(pvalue_threshold = .05) |> 
          select(CHROM, POS),
        outliers_match     = here("output", y) |> 
          read_csv2() |>
          distinct(`GenBank seq accession`, POS) |> 
          rename("CHROM" = `GenBank seq accession`)
      )
    ),
    write_files = read_files_pcadapt |>
      str_replace("pcadapt", "manhattan_plot_custom") |>
      str_replace(".rds", "_outliers_match.png")
  )
```

```{r}
#| label: PlotsGenMatch

map2(
  manhattans_outliers_match$write_files, manhattans_outliers_match$plots,
  \(x, y) {
    ggsave(
      here("output", "plots", "manhattan_new", "match", x),
      plot   = y,
      width  = 6000,
      height = 2000,
      units  = "px"
    )
  }
)
```

#### Coast and Islands Multiplot

```{r}
layout <-  "
AA######
BBCC####
DDEEFF##
GGHHIIJJ
"

multi_plot_coast_islands_match <- manhattans_outliers_match$plots[[4]]  +
    manhattans_outliers_match$plots[[5]] + manhattans_outliers_match$plots[[9]]  +
    manhattans_outliers_match$plots[[3]] + manhattans_outliers_match$plots[[8]]  + manhattans_outliers_match$plots[[1]] +
    manhattans_outliers_match$plots[[7]] + manhattans_outliers_match$plots[[10]] + manhattans_outliers_match$plots[[13]] + manhattans_outliers_match$plots[[2]] +
    plot_layout(design = layout, axes = "collect_x", axis_titles = "collect")

ggsave(
  here("output", "plots", "multi_plot_coast_islands_match.png"),
  plot   = multi_plot_coast_islands_match,
  width  = 12000,
  height = 6000,
  units = "px"
)
```

### Clean memory

```{r}
#| label: ManhattanMemClean

rm(SNP_positions, chromosome_map,
   manhattans, multi_plot_coast_islands,
   multi_plot_coast_islands_outliers, manhattans_outliers_match,
   manhattans_outliers_match, multi_plot_coast_islands_match,
   layout)

gc()
```

### Raw dataframes

```{r}
list.files(here("output")) |>
  str_subset("pcadapt") |> 
  lapply(
    \(x) {
      here("output", x) |>
        read_rds() |> 
        manhattan_plot_custom_2(
          SNP_positions   = SNP_positions,
          chromosome_map  = chromosome_map,
          data.only       = TRUE
        ) |> 
        write.csv(here("output", x |> str_replace("rds", "csv")))
    }
  )
```